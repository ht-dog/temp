{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"d767bdbefd455a9b275ba332e367e58bb0b0c6f8","modified":1723986561928},{"_id":"node_modules/hexo-theme-landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1723985921400},{"_id":"node_modules/hexo-theme-landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1723985922065},{"_id":"node_modules/hexo-theme-landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1723985922055},{"_id":"node_modules/hexo-theme-landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1723985922135},{"_id":"node_modules/hexo-theme-landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1723985922145},{"_id":"node_modules/hexo-theme-landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1723985922148},{"_id":"node_modules/hexo-theme-landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1723985922148},{"_id":"node_modules/hexo-theme-landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1723985922155},{"_id":"node_modules/hexo-theme-landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1723985922155},{"_id":"node_modules/hexo-theme-landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1723985922165},{"_id":"node_modules/hexo-theme-landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1723985922165},{"_id":"node_modules/hexo-theme-landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1723985922165},{"_id":"node_modules/hexo-theme-landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1723985922165},{"_id":"node_modules/hexo-theme-landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1723985922175},{"_id":"node_modules/hexo-theme-landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1723985922160},{"_id":"node_modules/hexo-theme-landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1723985922180},{"_id":"node_modules/hexo-theme-landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1723985922175},{"_id":"node_modules/hexo-theme-landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1723985922180},{"_id":"node_modules/hexo-theme-landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1723985922185},{"_id":"node_modules/hexo-theme-landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1723985922190},{"_id":"node_modules/hexo-theme-landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1723985922190},{"_id":"node_modules/hexo-theme-landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1723985922185},{"_id":"node_modules/hexo-theme-landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1723985922195},{"_id":"node_modules/hexo-theme-landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1723985922196},{"_id":"node_modules/hexo-theme-landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1723985922196},{"_id":"node_modules/hexo-theme-landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1723985922196},{"_id":"node_modules/hexo-theme-landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1723985922196},{"_id":"node_modules/hexo-theme-landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1723985922205},{"_id":"node_modules/hexo-theme-landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1723985922205},{"_id":"node_modules/hexo-theme-landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1723985922205},{"_id":"node_modules/hexo-theme-landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1723985922212},{"_id":"node_modules/hexo-theme-landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1723985922205},{"_id":"node_modules/hexo-theme-landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1723985922215},{"_id":"node_modules/hexo-theme-landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1723985922215},{"_id":"node_modules/hexo-theme-landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1723985922215},{"_id":"node_modules/hexo-theme-landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1723985922215},{"_id":"node_modules/hexo-theme-landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1723985921766},{"_id":"node_modules/hexo-theme-landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1723985921835},{"_id":"node_modules/hexo-theme-landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1723985921915},{"_id":"node_modules/hexo-theme-landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1723985921945},{"_id":"node_modules/hexo-theme-landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1723985921926},{"_id":"node_modules/hexo-theme-landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1723985921955},{"_id":"node_modules/hexo-theme-landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1723985921975},{"_id":"node_modules/hexo-theme-landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1723985922025},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1723985921585},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1723985921675},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1723985921639},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1723985921785},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1723985921865},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1723985921895},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1723985921885},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1723985921910},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1723985921905},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1723985921725},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1723985921815},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1723985921965},{"_id":"node_modules/hexo-theme-landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1723985922075},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1723985921926},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1723985921975},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1723985921958},{"_id":"node_modules/hexo-theme-landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1723985921985},{"_id":"node_modules/hexo-theme-landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1723985922075},{"_id":"node_modules/hexo-theme-landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1723985922135},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1723985921475},{"_id":"node_modules/hexo-theme-landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1723985922055},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1723985921805},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1723985921878},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1723985921855},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1723985921940},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1723985921965},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1723985922085},{"_id":"node_modules/hexo-theme-landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1723985921990},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1723985922095},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1723985922090},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1723985922101},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1723985922105},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1723985922105},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1723985922125},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1723985922116},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1723985922132},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1723985922135},{"_id":"node_modules/hexo-theme-landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1723985922116},{"_id":"node_modules/hexo-theme-landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1723985922125},{"_id":"node_modules/hexo-theme-landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1723985922053},{"_id":"node_modules/hexo-theme-landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1723985922039},{"_id":"node_modules/hexo-theme-landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1723985922015},{"_id":"public/2024/08/18/hello-world/index.html","hash":"ba3fcb57cf520d42a2f8e0e84c09afffc62f8f12","modified":1723990116127},{"_id":"public/archives/index.html","hash":"fb239a678770a2ab8652d7370ceb77006a1eaf7e","modified":1723990116127},{"_id":"public/archives/2024/index.html","hash":"6927efd454fd274e9d8f85c6d2d703d13c34674d","modified":1723990116127},{"_id":"public/archives/2024/08/index.html","hash":"65ae2f324bd60fe1dd51b62c496c4b3122fab3a7","modified":1723990116127},{"_id":"public/index.html","hash":"addbff7f458cea4fb46792eca5758c34ab3287dc","modified":1723990116127},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1723987805256},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1723987805256},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1723987805256},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1723987805256},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1723987805256},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1723987805256},{"_id":"source/_posts/莫反浅谈.md","hash":"0140c2e193e074fed193a281201e5cebb2ca9b91","modified":1723990715197},{"_id":"public/2024/08/18/莫反浅谈/index.html","hash":"0ed4484ccb58fba7c03efb8a547d0455c201b9e3","modified":1723990116127}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n\n$\\sum\\limits_{i=1}^n$\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n\n\n$\\sum\\limits_{i=1}^n$\n","slug":"hello-world","published":1,"date":"2024-08-18T12:55:56.366Z","updated":"2024-08-18T13:09:21.928Z","comments":1,"layout":"post","photos":[],"_id":"clzzltslv00007ww09t54391f","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<p>$\\sum\\limits_{i&#x3D;1}^n$</p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n<p>$\\sum\\limits_{i&#x3D;1}^n$</p>\n"},{"title":"莫反浅谈","date":"2024-08-18T14:24:53.000Z","_content":"## *前言*\n\n集训的时候讲了子集反演，于是想了解一下其他的反演，便去学了莫反。于是想写一篇讲解，顺便来巩固一下，加深一下理解。\n\n## *前置知识*\n\n### 1. 艾弗森括号\n\n$\\left[P\\right]=\\begin{cases}1\\ \\  \\ P\\ is\\ true \\\\   0\\ \\ \\ Otherwise\\end{cases}$ 相当于强转 $bool$ 类型的一个括号。\n\n### 2.数论分块\n\n快速求解的工具，这里不展开讲解了，详解见[数论分块 by: mango09](https://www.cnblogs.com/mangoworld/p/Number-Theory-Block.html)\n\n### 3.积性函数\n\n#### 定义\n\n满足 $f(xy)=f(x)f(y)$ 的函数称为积性函数。\n\n#### 常见的几种积性函数\n\n1. $I(n)=1$\n2. $e(n)=\\left[n=1\\right]$\n3. $\\mathrm{Id}_k(n)=n^k，通常 \\mathrm{Id}_1(n)记为\\mathrm{Id}(n)$\n4. $d(n)=\\sum\\limits_{d|n}1$ 即 $n$ 的因数个数\n5. $\\sigma_k(n)=\\sum\\limits_{d|n}{d^k}$\n$\\\\ \\quad$ 特别的，$k=0$ 时，为因子个数，即 $d(n)$\n$\\\\  \\,\\,\\qquad \\qquad$ $k=1$ 时，为因子和，通常记为 $\\sigma(n)$\n6. 欧拉函数 $\\varphi(n)=\\sum\\limits_{i=1}^n\\left[\\gcd(i,n)=1\\right]$\n7. 莫比乌斯函数 $\\mu(n)=\\begin{cases}1\\qquad\\quad \\left[n=1\\right]\\\\0\\ \\quad\\qquad n有平方因子\\\\(-1)^k \\ \\, \\quad k为n的因子个数\\end{cases}$\n\n---\n\n## *步入正题*\n\n$\\ $\n\n### **一**、$\\ $ **莫比乌斯函数**\n\n#### 1.$\\ $**定义**\n\n$\\ $\n\n上面已经提到了莫比乌斯函数 $\\mu$ 的定义，这里再解释一下。第一种情况对应的就是 $\\mu(1)=1$，第二种情况的意思是 $n\\ =\\ \\prod\\limits_{p_i|n}{{p_i}^{c_i}}$。其中，$p_i$ 均为质数。显然对于所有 $n$，都能写成这样的形式（即分解质因数）。若 $\\exists\\ c_i>1$ 则 $\\mu(n)=0$。否则 $\\mu(n)\\ =\\ (-1)^k$，其中 $k$ 为 $n$ 的质因子个数。\n\n---\n\n#### **2.** $\\ $ **性质**\n\n $$ \\sum\\limits_{d|n}\\mu(d)=\\left[n=1\\right]$$\n $\\qquad$ 让我们来简单证明一下，首先对于 $n=1$ 时，那么显然这个式子成立。再来考虑 $n>1$ 时，我们令  $n\\ =\\ \\prod\\limits_{p_i|n}{{p_i}^{c_i}}$。其中，$p_i$ 均为质数。那么 $n$ 的因子相当于在这些 $p$ 中任选几个相乘。显然当某个 $p_i$ 选了多次时，那么 $\\mu(d)=0$，我们不做考虑。这样我们就能把左边的和式变成 $\\sum\\limits_{i=0}^k{C_k^i}\\times(-1)^{i}=\\sum\\limits_{i=0}^k{C_k^i}\\times(-1)^i\\times1^{k-i}$，由二项式定理得，这个式子就是 $(-1+1)^k=0$，得证！\n\n---\n\n#### **3.** $\\ $ **求莫比乌斯函数**\n\n $\\ $\n\n 因为莫比乌斯函数是积性函数，所以我们可以用线性筛来求。\n\n```cpp\nint primes[N],mu[N],k;\nbitset<N>st;\nvoid Prime(int x){\n    mu[1]=1;\n    for(int i=2;i<=x;++i){\n        if(!st[i]){\n            primes[++k]=i;\n            mu[i]=-1;\n        }\n        for(int j=1;primes[j]*i<=x;++j){\n            st[i*primes[j]]=1;\n            if(!(i%primes[j])) break;\n            mu[i*primes[j]]=-mu[i];\n        }\n    }\n}\n```\n\n---\n\n### 二、$\\ $ 狄利克雷 $(Dirichlet)$ 卷积\n\n#### **1.** $\\ $ **定义**\n\n定义两个数论函数（$f,g$）的狄利克雷卷积为：\n$$\\\\ (f*g)(n)=\\sum\\limits_{d|n}f(d)g(\\frac{n}{d})$$\n\n---\n\n#### **2.** $\\ $ **性质1**\n\n1. 满足交换律($f*g=g*f$)，结合律$(f*g*h=f*(g*h))$，分配律$(f*(g+h)=f*g+f*h)$\n2. 任何数论函数卷上单位函数 $e$ 都为它本身，即 $(f*e)(n)=f(n)$\n3. 两个积性函数 $f,g$ 卷积后，仍为积性函数，即 $f*g$ 为积性函数。\n\n---\n\n#### **3.**$\\ $ **常见积性函数与狄利克雷卷积的性质**\n\n---\n\n**1. 关于单位函数**\n$$e=\\mu *I=\\sum\\limits_{d|n}\\mu(d)$$\n$\\quad$ 证明：\n\n$\\qquad\\qquad$ 我们前面已经证过 $\\sum\\limits_{d|n}\\mu(d)=\\left[n=1\\right]$，而单位函数 $e=\\left[n=1\\right]$。得证！\n\n通过这个性质，我们也能知道，$\\mu$ 其实就是 $I$ 的逆。\n\n---\n\n**2. 关于欧拉函数**\n$$\\varphi * I=\\mathrm{Id}$$\n$$\\\\ \\varphi=\\mathrm{Id}*\\mu$$\n证明：\n\n$\\qquad\\qquad$ 第一个性质展开之后就是 $\\sum\\limits_{d|n}\\varphi(d)=n$。我们设 $f(x)=\\sum\\limits_{i=1}^n{\\left[\\gcd(i,n)=x\\right]}$ 那么显然，$n=\\sum\\limits_{i=1}^nf(i)$，而 $f(x)=\\varphi(\\frac{n}{x})$，所以 $n=\\sum\\limits_{d|n}\\varphi(\\frac{n}{d})$ 同时 $n$ 的因子又满足对称性，所以就能得到 $n=\\sum\\limits_{d|n}\\varphi(d)$。\n\n$\\qquad\\qquad$对于第二个性质，我们在第一个式子的基础上，两边同时卷上 $\\mu$，则左边为 $\\varphi *I*\\mu=\\varphi*e=\\varphi$，右边为 $\\mathrm{Id}*\\mu$，得证！\n\n---\n\n**3.**$\\ $ **关于幂函数** $(\\mathrm{Id}_k(n)=n^k)$ **和除数函数**( $\\sigma_k(n)=\\sum\\limits_{d|n}{d^k}$ )\n\n$$\\mathrm{Id}_k*I=\\sigma_k$$\n\n证明：\n\n左边展开后为 $\\sum\\limits_{d|n}{d^k}$，等于右边，得证！\n\n---\n\n### 三、莫比乌斯反演\n\n#### **结论1**\n\n若有两个数论函数 $f,g$，且满足\n$$f=g*I$$\n则有\n$$g=f*\\mu$$\n证明：证明很好证，就是将第一个式子带入到第二个式子中看是否成立，即 $g=g*I*\\mu=g*(\\mu*I)=g*e=g$，得证！另外提一嘴，这两个命题是充要的，证明与其类似。\n\n---\n\n#### **结论2**\n\n$$\\left[\\gcd(i,j)=1\\right]=\\sum\\limits_{d|\\gcd(i,j)}\\mu(d)$$\n感觉好像是废话，其实就是上面的莫比乌斯函数的性质将 $\\gcd(i,j)$ 带入到那里的 $n$ 而已，不再证明。\n\n### **四、套路和一些例题**\n\n~~感觉莫反的题大部分和最大公约数求和有关~~\n\n---\n\n#### **套路**\n\n求：\n\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^mf(\\gcd(i,j))$$\n\n设 $f=g*I=\\sum\\limits_{d|n}g(d)$\n则原式化为\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m\\sum\\limits_{d|\\gcd(i,j)}g(d)$$\n变化一下求和顺序，先枚举 $d$，因为 $d|\\gcd(i,j)$，所以$d|i$ 且 $d|j$，则原式变为\n$$\\sum\\limits_{d=1}^{min(n,m)} \\left\\lfloor\\dfrac{n}{d}\\right\\rfloor \\left\\lfloor\\dfrac{m}{d}\\right\\rfloor g(d)$$\n\n> $\\dag$：这一步式子好像解释的不是很清晰，我再解释一下。首先先来看原来的式子，若有一个 $d$ 使得 $d|i$ 且 $d|j$，那么 $d$ 在 $n$ 中会计算 $\\left\\lfloor\\dfrac{n}{d}\\right\\rfloor$ 次（即 $d$ 的倍数次），在 $m$ 中同理，会计算 $\\left\\lfloor\\dfrac{m}{d}\\right\\rfloor$ 次。用乘法原理对于每一个 $d$ 都会计算 $\\left\\lfloor\\dfrac{m}{d}\\right\\rfloor\\times\\left\\lfloor\\dfrac{n}{d}\\right\\rfloor$ 次，再乘上 $g(d)$，就能得出来这个式子了。\n\n若我们知道了 $g$ 的所有取值，那么我们就可以用数论分块求解了。所以，现在我们的主要问题变成了求解 $g$。这就可以用莫比乌斯反演了，由莫比乌斯反演得 $g=\\mu *f$。$g$ 是一个积性函数,所以也可以用线性筛求解。\n\n---\n\n#### **例题1**\n\n求：\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m \\gcd(i,j)$$\n要求这个，就是求\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m\\mathrm{Id}(\\gcd(i,j))$$\n那上面的 $g=Id*\\mu=\\varphi$,所以答案就是\n$$\\sum\\limits_{d=1}^{min(n,m)} \\left\\lfloor\\dfrac{n}{d}\\right\\rfloor \\left\\lfloor\\dfrac{m}{d}\\right\\rfloor \\varphi(d)$$\n实现：\n\n```cpp\nint primes[N];\nbitset<N>st;\nint k;\nint phi[N]，sum[N];\nvoid Prime(int x){//处理欧拉函数和前缀和\n    phi[1]=1;\n    for(int i=2;i<=x;++i){\n        if(!st[i]){\n            primes[++k]=i;\n            phi[i]=i-1;\n        }\n        for(int j=1;primes[j]*i<=x;++j){\n            st[i*primes[j]]=1;\n            if(i%primes[j]==0){\n                phi[i*primes[j]]=phi[i]*primes[j];\n                break;\n            }\n            phi[i*primes[j]]=phi[i]*phi[primes[j]];\n        }\n    }\n    for(int i=1;i<=x;++i) sum[i]=sum[i-1]+phi[i];\n}\nint solve(int n,int m){//数论分块求解\n    if(n>m) swap(n,m);\n    int l=1,r=1,ans=0;\n    while(l<=n){\n        r=MIN(n/(n/l),m/(m/l));\n        ans+=(n/l)*(m/l)*(sum[r]-sum[l-1]);\n        l=r+1;\n    }\n    return ans;\n}\n```\n\n---\n\n#### **例题2**\n\n求：\n$$\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^m \\left[\\gcd(i,j)=1\\right]$$\n这就可以用到我们上面提到的莫比乌斯反演结论2了，则原式化为\n$$\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^m\\sum\\limits_{d|\\gcd(i,j)}\\mu(d)$$\n还是和上面一样的变换一下求和顺序，得到\n$$\\sum\\limits_{d=1}^{min(n,m)}\\left\\lfloor \\frac{n}{d}\\right\\rfloor\\left\\lfloor \\frac{m}{d}\\right\\rfloor\\mu(d)$$\n与例题1类似的求法，不再放code。\n","source":"_posts/莫反浅谈.md","raw":"---\ntitle: 莫反浅谈\ndate: 2024-08-18 22:24:53\ntags:\n---\n## *前言*\n\n集训的时候讲了子集反演，于是想了解一下其他的反演，便去学了莫反。于是想写一篇讲解，顺便来巩固一下，加深一下理解。\n\n## *前置知识*\n\n### 1. 艾弗森括号\n\n$\\left[P\\right]=\\begin{cases}1\\ \\  \\ P\\ is\\ true \\\\   0\\ \\ \\ Otherwise\\end{cases}$ 相当于强转 $bool$ 类型的一个括号。\n\n### 2.数论分块\n\n快速求解的工具，这里不展开讲解了，详解见[数论分块 by: mango09](https://www.cnblogs.com/mangoworld/p/Number-Theory-Block.html)\n\n### 3.积性函数\n\n#### 定义\n\n满足 $f(xy)=f(x)f(y)$ 的函数称为积性函数。\n\n#### 常见的几种积性函数\n\n1. $I(n)=1$\n2. $e(n)=\\left[n=1\\right]$\n3. $\\mathrm{Id}_k(n)=n^k，通常 \\mathrm{Id}_1(n)记为\\mathrm{Id}(n)$\n4. $d(n)=\\sum\\limits_{d|n}1$ 即 $n$ 的因数个数\n5. $\\sigma_k(n)=\\sum\\limits_{d|n}{d^k}$\n$\\\\ \\quad$ 特别的，$k=0$ 时，为因子个数，即 $d(n)$\n$\\\\  \\,\\,\\qquad \\qquad$ $k=1$ 时，为因子和，通常记为 $\\sigma(n)$\n6. 欧拉函数 $\\varphi(n)=\\sum\\limits_{i=1}^n\\left[\\gcd(i,n)=1\\right]$\n7. 莫比乌斯函数 $\\mu(n)=\\begin{cases}1\\qquad\\quad \\left[n=1\\right]\\\\0\\ \\quad\\qquad n有平方因子\\\\(-1)^k \\ \\, \\quad k为n的因子个数\\end{cases}$\n\n---\n\n## *步入正题*\n\n$\\ $\n\n### **一**、$\\ $ **莫比乌斯函数**\n\n#### 1.$\\ $**定义**\n\n$\\ $\n\n上面已经提到了莫比乌斯函数 $\\mu$ 的定义，这里再解释一下。第一种情况对应的就是 $\\mu(1)=1$，第二种情况的意思是 $n\\ =\\ \\prod\\limits_{p_i|n}{{p_i}^{c_i}}$。其中，$p_i$ 均为质数。显然对于所有 $n$，都能写成这样的形式（即分解质因数）。若 $\\exists\\ c_i>1$ 则 $\\mu(n)=0$。否则 $\\mu(n)\\ =\\ (-1)^k$，其中 $k$ 为 $n$ 的质因子个数。\n\n---\n\n#### **2.** $\\ $ **性质**\n\n $$ \\sum\\limits_{d|n}\\mu(d)=\\left[n=1\\right]$$\n $\\qquad$ 让我们来简单证明一下，首先对于 $n=1$ 时，那么显然这个式子成立。再来考虑 $n>1$ 时，我们令  $n\\ =\\ \\prod\\limits_{p_i|n}{{p_i}^{c_i}}$。其中，$p_i$ 均为质数。那么 $n$ 的因子相当于在这些 $p$ 中任选几个相乘。显然当某个 $p_i$ 选了多次时，那么 $\\mu(d)=0$，我们不做考虑。这样我们就能把左边的和式变成 $\\sum\\limits_{i=0}^k{C_k^i}\\times(-1)^{i}=\\sum\\limits_{i=0}^k{C_k^i}\\times(-1)^i\\times1^{k-i}$，由二项式定理得，这个式子就是 $(-1+1)^k=0$，得证！\n\n---\n\n#### **3.** $\\ $ **求莫比乌斯函数**\n\n $\\ $\n\n 因为莫比乌斯函数是积性函数，所以我们可以用线性筛来求。\n\n```cpp\nint primes[N],mu[N],k;\nbitset<N>st;\nvoid Prime(int x){\n    mu[1]=1;\n    for(int i=2;i<=x;++i){\n        if(!st[i]){\n            primes[++k]=i;\n            mu[i]=-1;\n        }\n        for(int j=1;primes[j]*i<=x;++j){\n            st[i*primes[j]]=1;\n            if(!(i%primes[j])) break;\n            mu[i*primes[j]]=-mu[i];\n        }\n    }\n}\n```\n\n---\n\n### 二、$\\ $ 狄利克雷 $(Dirichlet)$ 卷积\n\n#### **1.** $\\ $ **定义**\n\n定义两个数论函数（$f,g$）的狄利克雷卷积为：\n$$\\\\ (f*g)(n)=\\sum\\limits_{d|n}f(d)g(\\frac{n}{d})$$\n\n---\n\n#### **2.** $\\ $ **性质1**\n\n1. 满足交换律($f*g=g*f$)，结合律$(f*g*h=f*(g*h))$，分配律$(f*(g+h)=f*g+f*h)$\n2. 任何数论函数卷上单位函数 $e$ 都为它本身，即 $(f*e)(n)=f(n)$\n3. 两个积性函数 $f,g$ 卷积后，仍为积性函数，即 $f*g$ 为积性函数。\n\n---\n\n#### **3.**$\\ $ **常见积性函数与狄利克雷卷积的性质**\n\n---\n\n**1. 关于单位函数**\n$$e=\\mu *I=\\sum\\limits_{d|n}\\mu(d)$$\n$\\quad$ 证明：\n\n$\\qquad\\qquad$ 我们前面已经证过 $\\sum\\limits_{d|n}\\mu(d)=\\left[n=1\\right]$，而单位函数 $e=\\left[n=1\\right]$。得证！\n\n通过这个性质，我们也能知道，$\\mu$ 其实就是 $I$ 的逆。\n\n---\n\n**2. 关于欧拉函数**\n$$\\varphi * I=\\mathrm{Id}$$\n$$\\\\ \\varphi=\\mathrm{Id}*\\mu$$\n证明：\n\n$\\qquad\\qquad$ 第一个性质展开之后就是 $\\sum\\limits_{d|n}\\varphi(d)=n$。我们设 $f(x)=\\sum\\limits_{i=1}^n{\\left[\\gcd(i,n)=x\\right]}$ 那么显然，$n=\\sum\\limits_{i=1}^nf(i)$，而 $f(x)=\\varphi(\\frac{n}{x})$，所以 $n=\\sum\\limits_{d|n}\\varphi(\\frac{n}{d})$ 同时 $n$ 的因子又满足对称性，所以就能得到 $n=\\sum\\limits_{d|n}\\varphi(d)$。\n\n$\\qquad\\qquad$对于第二个性质，我们在第一个式子的基础上，两边同时卷上 $\\mu$，则左边为 $\\varphi *I*\\mu=\\varphi*e=\\varphi$，右边为 $\\mathrm{Id}*\\mu$，得证！\n\n---\n\n**3.**$\\ $ **关于幂函数** $(\\mathrm{Id}_k(n)=n^k)$ **和除数函数**( $\\sigma_k(n)=\\sum\\limits_{d|n}{d^k}$ )\n\n$$\\mathrm{Id}_k*I=\\sigma_k$$\n\n证明：\n\n左边展开后为 $\\sum\\limits_{d|n}{d^k}$，等于右边，得证！\n\n---\n\n### 三、莫比乌斯反演\n\n#### **结论1**\n\n若有两个数论函数 $f,g$，且满足\n$$f=g*I$$\n则有\n$$g=f*\\mu$$\n证明：证明很好证，就是将第一个式子带入到第二个式子中看是否成立，即 $g=g*I*\\mu=g*(\\mu*I)=g*e=g$，得证！另外提一嘴，这两个命题是充要的，证明与其类似。\n\n---\n\n#### **结论2**\n\n$$\\left[\\gcd(i,j)=1\\right]=\\sum\\limits_{d|\\gcd(i,j)}\\mu(d)$$\n感觉好像是废话，其实就是上面的莫比乌斯函数的性质将 $\\gcd(i,j)$ 带入到那里的 $n$ 而已，不再证明。\n\n### **四、套路和一些例题**\n\n~~感觉莫反的题大部分和最大公约数求和有关~~\n\n---\n\n#### **套路**\n\n求：\n\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^mf(\\gcd(i,j))$$\n\n设 $f=g*I=\\sum\\limits_{d|n}g(d)$\n则原式化为\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m\\sum\\limits_{d|\\gcd(i,j)}g(d)$$\n变化一下求和顺序，先枚举 $d$，因为 $d|\\gcd(i,j)$，所以$d|i$ 且 $d|j$，则原式变为\n$$\\sum\\limits_{d=1}^{min(n,m)} \\left\\lfloor\\dfrac{n}{d}\\right\\rfloor \\left\\lfloor\\dfrac{m}{d}\\right\\rfloor g(d)$$\n\n> $\\dag$：这一步式子好像解释的不是很清晰，我再解释一下。首先先来看原来的式子，若有一个 $d$ 使得 $d|i$ 且 $d|j$，那么 $d$ 在 $n$ 中会计算 $\\left\\lfloor\\dfrac{n}{d}\\right\\rfloor$ 次（即 $d$ 的倍数次），在 $m$ 中同理，会计算 $\\left\\lfloor\\dfrac{m}{d}\\right\\rfloor$ 次。用乘法原理对于每一个 $d$ 都会计算 $\\left\\lfloor\\dfrac{m}{d}\\right\\rfloor\\times\\left\\lfloor\\dfrac{n}{d}\\right\\rfloor$ 次，再乘上 $g(d)$，就能得出来这个式子了。\n\n若我们知道了 $g$ 的所有取值，那么我们就可以用数论分块求解了。所以，现在我们的主要问题变成了求解 $g$。这就可以用莫比乌斯反演了，由莫比乌斯反演得 $g=\\mu *f$。$g$ 是一个积性函数,所以也可以用线性筛求解。\n\n---\n\n#### **例题1**\n\n求：\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m \\gcd(i,j)$$\n要求这个，就是求\n$$\\sum\\limits_{i=1}^n\\sum\\limits_{j=1}^m\\mathrm{Id}(\\gcd(i,j))$$\n那上面的 $g=Id*\\mu=\\varphi$,所以答案就是\n$$\\sum\\limits_{d=1}^{min(n,m)} \\left\\lfloor\\dfrac{n}{d}\\right\\rfloor \\left\\lfloor\\dfrac{m}{d}\\right\\rfloor \\varphi(d)$$\n实现：\n\n```cpp\nint primes[N];\nbitset<N>st;\nint k;\nint phi[N]，sum[N];\nvoid Prime(int x){//处理欧拉函数和前缀和\n    phi[1]=1;\n    for(int i=2;i<=x;++i){\n        if(!st[i]){\n            primes[++k]=i;\n            phi[i]=i-1;\n        }\n        for(int j=1;primes[j]*i<=x;++j){\n            st[i*primes[j]]=1;\n            if(i%primes[j]==0){\n                phi[i*primes[j]]=phi[i]*primes[j];\n                break;\n            }\n            phi[i*primes[j]]=phi[i]*phi[primes[j]];\n        }\n    }\n    for(int i=1;i<=x;++i) sum[i]=sum[i-1]+phi[i];\n}\nint solve(int n,int m){//数论分块求解\n    if(n>m) swap(n,m);\n    int l=1,r=1,ans=0;\n    while(l<=n){\n        r=MIN(n/(n/l),m/(m/l));\n        ans+=(n/l)*(m/l)*(sum[r]-sum[l-1]);\n        l=r+1;\n    }\n    return ans;\n}\n```\n\n---\n\n#### **例题2**\n\n求：\n$$\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^m \\left[\\gcd(i,j)=1\\right]$$\n这就可以用到我们上面提到的莫比乌斯反演结论2了，则原式化为\n$$\\sum\\limits_{i=1}^n \\sum\\limits_{j=1}^m\\sum\\limits_{d|\\gcd(i,j)}\\mu(d)$$\n还是和上面一样的变换一下求和顺序，得到\n$$\\sum\\limits_{d=1}^{min(n,m)}\\left\\lfloor \\frac{n}{d}\\right\\rfloor\\left\\lfloor \\frac{m}{d}\\right\\rfloor\\mu(d)$$\n与例题1类似的求法，不再放code。\n","slug":"莫反浅谈","published":1,"updated":"2024-08-18T14:34:18.605Z","_id":"clzzn7c1i0000xow04ch52m5e","comments":1,"layout":"post","photos":[]}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}